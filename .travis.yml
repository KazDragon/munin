language: cpp
sudo: false

compiler:
  - clang

matrix:
  include:
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Debug && SHARED=0 && COVERAGE=ON"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Debug && SHARED=1"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Release && SHARED=0"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - g++-5
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CONFIG=Release && SHARED=1"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=0"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Debug && SHARED=1"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Release && SHARED=0"

  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-4.0
        packages:
          - clang-4.0
          - google-mock
          - libboost1.55-all-dev
    env:
      - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0 && CONFIG=Release && SHARED=1"

cache:
  - apt: true
  - directories:
    - lcov
    - gtest

before_install:
# Set up CC/CXX variables
  - eval "${MATRIX_EVAL}"
  - export CMAKE=cmake

# workaround for not having lcov 1.13
  - if [ ! -d "lcov/usr/local/bin/lcov" ]; then
      wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.13.orig.tar.gz;
      tar -xzf lcov_1.13.orig.tar.gz;
      mkdir lcov || true;
      DESTDIR=$HOME/lcov make -C lcov-1.13/ install;
    fi
  - export LCOV=$HOME/lcov/usr/local/bin/lcov

# build and install a number of other libraries
  - mkdir ext || true
  - export EXTERNAL_LIBRARIES=$PWD/ext

# install GMock
  - mkdir -p ext/gmock || true
  - cd ext/gmock
  - $CMAKE /usr/src/gmock -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_INSTALL_PREFIX=$EXTERNAL_LIBRARIES
  - make
  - export GMOCK_EXT=$PWD
  - cd ../..

# install Terminal++
  - wget https://github.com/KazDragon/terminalpp/archive/v1.2.7.tar.gz -O terminalpp.tar.gz
  - tar zxvf terminalpp.tar.gz
  
  - cd terminalpp-1.2.7
  - $CMAKE . -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DCMAKE_INSTALL_PREFIX=$EXTERNAL_LIBRARIES
  - make install
  - cd ..
  
# install coverage software
  - if [ "$COVERAGE" == "ON" ]; then gem install coveralls-lcov; fi

before_script:
  - mkdir build
  - cd build

  - $CMAKE -DTerminalpp_DIR=$EXTERNAL_LIBRARIES/lib/terminalpp-1.2.7 -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DMUNIN_SANITIZE=$SANITIZE -DMUNIN_COVERAGE=$COVERAGE -DGTEST_LIBRARY=$GMOCK_EXT/gtest/libgtest.a -DGTEST_MAIN_LIBRARY=$GMOCK_EXT/gtest/libgtest_main.a -DGTEST_INCLUDE_DIR=/usr/src/gmock/gtest/include -DGMOCK_LIBRARY=$GMOCK_EXT/libgmock.a -DGMOCK_MAIN_LIBRARY=$GMOCK_EXT/libgmock_main.a ..

script:
  - make
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory . --zerocounters -q;
    fi
  - make test

after_failure:
  - cat Testing/Temporary/LastTest.log

after_success:
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory .  --capture --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --remove coverage.info '*/test/*' '/usr/*' '*/ext/*' '*/json/*' --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --list coverage.info;
        coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info;
    fi

notifications:
  email:
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always
  slack:
    rooms:
      - kazdragon:E8B4Cs4p3TiVLqHAq8wYYTr3#ci TODO: new token.

