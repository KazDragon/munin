language: cpp

sudo: false

compiler:
  - clang

env:
  - CONFIG=Release SHARED=1 CCOMPILE=clang CXXCOMPILE=clang++
  - CONFIG=Release SHARED=0 CCOMPILE=clang CXXCOMPILE=clang++
  - CONFIG=Debug SHARED=1 CCOMPILE=clang CXXCOMPILE=clang++
  - CONFIG=Debug SHARED=0 CCOMPILE=clang CXXCOMPILE=clang++

addons:
  apt:
    sources: &sources
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - clang
      - gcc-4.8
      - g++-4.8
      - google-mock
      - libboost1.55-all-dev

matrix:
  include:

    # g++-5.2 with coverage
    - compiler: g++
      env: CONFIG=Debug SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5 COVERAGE=ON
      addons:
        apt:
          sources: *sources
          packages:
            - gcc-5
            - g++-5
            - google-mock
            - libboost1.55-all-dev

    # g++-5.2
    - compiler: g++
      env: CONFIG=Release SHARED=1 CCOMPILE=gcc-5 CXXCOMPILE=g++-5
      addons:
        apt:
          sources: *sources
          packages:
            - clang
            - gcc-5
            - g++-5
            - google-mock
            - libboost1.55-all-dev

    - compiler: g++
      env: CONFIG=Release SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5
      addons:
        apt:
          sources: *sources
          packages:
            - clang
            - gcc-5
            - g++-5
            - google-mock
            - libboost1.55-all-dev

    - compiler: g++
      env: CONFIG=Debug SHARED=1 CCOMPILE=gcc-5 CXXCOMPILE=g++-5
      addons:
        apt:
          sources: *sources
          packages:
            - clang
            - gcc-5
            - g++-5
            - google-mock
            - libboost1.55-all-dev

    - compiler: g++
      env: CONFIG=Debug SHARED=0 CCOMPILE=gcc-5 CXXCOMPILE=g++-5
      addons:
        apt:
          sources: *sources
          packages:
            - clang
            - gcc-5
            - g++-5
            - google-mock
            - libboost1.55-all-dev

cache:
  - apt: true
  - directories:
      - cmake-3.4.0-Linux-x86_64

before_install:
  - ls -lR /usr/src

# workaround for not having CMake 3.4
  - if [ ! -d "cmake-3.4.0-Linux-x86_64/bin" ]; then
      wget --no-check-certificate http://www.cmake.org/files/v3.4/cmake-3.4.0-Linux-x86_64.tar.gz;
      tar -xzf cmake-3.4.0-Linux-x86_64.tar.gz;
    fi
  - export CMAKE=$PWD/cmake-3.4.0-Linux-x86_64/bin/cmake

# install GTest

  - mkdir gtest
  - cd gtest
  - CC=$COMPILE CXX=$CXXCOMPILE $CMAKE /usr/src/gtest && make
  - export GTEST_ROOT=$PWD
  - cd ..

# build and install a number of other libraries
  - mkdir ext
  - export EXTERNAL_LIBRARIES=$PWD/ext

# install Terminal++
  - wget https://github.com/KazDragon/terminalpp/archive/v1.2.2.tar.gz -O terminalpp.tar.gz
  - tar zxvf terminalpp.tar.gz
  
  - cd terminalpp-1.2.2
  - CC=$CCOMPILE CXX=$CXXCOMPILE $CMAKE . -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DCMAKE_INSTALL_PREFIX=$EXTERNAL_LIBRARIES
  - make terminalpp
  - make install
  - cd ..
  
# install coverage software
  - if [ "$COVERAGE" == "ON" ]; then gem install coveralls-lcov; fi

before_script:
  - mkdir build
  - cd build
  - CC=$CCOMPILE CXX=$CXXCOMPILE $CMAKE -DTerminalpp_DIR=$EXTERNAL_LIBRARIES/share/cmake/terminalpp -DCMAKE_BUILD_TYPE=$CONFIG -DBUILD_SHARED_LIBS=$SHARED -DMUNIN_SANITIZE=$SANITIZE -DMUNIN_COVERAGE=$COVERAGE ..

script:
  - make
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory . --zerocounters -q;
    fi
  - make test

after_failure:
  - cat Testing/Temporary/LastTest.log

after_success:
  - if [ "$COVERAGE" == "ON" ]; then
        $LCOV --gcov-tool=gcov-5 --base-directory . --directory .  --capture --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --remove coverage.info '*/test/*' '/usr/*' --output-file coverage.info;
        $LCOV --gcov-tool=gcov-5 --list coverage.info;
        coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info;
    fi

notifications:
  email:
    on_success: change # [always|never|change] # default: change
    on_failure: change # [always|never|change] # default: always
  slack:
    rooms:
      - kazdragon:E8B4Cs4p3TiVLqHAq8wYYTr3#ci TODO: new token.

